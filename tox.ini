[tox]
envlist = py3{9,10,11,12,13}-{linux,macos,windows},coverage
skip_missing_interpreters = true
isolated_build = true
skipsdist = true
min_version = 4.3.3

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows
    ubuntu-22.04: linux
    macos-13: macos
    windows-2019: windows

[base]
deps =
    pip>=23.1
    setuptools_scm[toml]

[build]
deps =
    pip>=23.1
    build
    twine

[testenv]
passenv =
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    XDG_*
    CI
    OS
    PLATFORM
    PYTHON
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE
    pythonLocation

setenv =
    COVERAGE_FILE = .coverage.{envname}

allowlist_externals =
    bash

deps =
    {[base]deps}
    -e .[test,cov]

commands =
    #python -m unittest discover -v -s picotui
    python -m pytest -v tests/ --capture=no --doctest-modules '--doctest-glob=*.rst' '--doctest-glob=*.py'  --cov=picotui --cov-branch --cov-report term-missing

[testenv:coverage]
basepython =
    python3

skip_install =
    true

allowlist_externals =
    bash

deps =
    coverage

commands =
    bash -c 'coverage combine .coverage.py*'
    #coverage combine '.coverage.py*'
    coverage xml

depends =
    py39
    py310
    py311
    py312
    py313

[coverage:run]
parallel=True

[testenv:dev]
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    -e .

commands =
    python -m setuptools_scm

[testenv:{docs,ldocs,cdocs}]
# these tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
envdir = {toxworkdir}/docs
runner = ignore_env_name_mismatch
skip_install = true

allowlist_externals =
    make
    bash

deps =
    {[base]deps}
    .[doc]

commands =
    docs: make -C docs html
    ldocs: make -C docs linkcheck
    cdocs: make -C docs clean

[testenv:lint]
passenv =
    CI
    PYTHONIOENCODING

deps =
    {[base]deps}
    pylint
    reuse

commands =
    pylint --fail-under=5 picotui

[testenv:style]
passenv =
    CI
    PYTHONIOENCODING

deps =
    {[base]deps}
    flake8

commands =
    flake8 picotui

[testenv:build]
skip_install = true

passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[build]deps}

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
always_copy = False

passenv =
    CI
    GITHUB*
    PIP_DOWNLOAD_CACHE

deps =
    pip>=23.1

commands =
    python -m pip install picotui --pre --force-reinstall --prefer-binary -f dist/
    python -m pip show -f picotui

[testenv:mypy]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    mypy

commands =
    python -m mypy --follow-imports=normal --install-types --non-interactive picotui/

[testenv:reuse]
skip_install = true
passenv =
    PYTHON
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    reuse
    sbom4python

commands =
    reuse {posargs:"lint"}

[testenv:sec]
skip_install = true
passenv =
    PYTHON
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    bandit[toml]

commands =
    bandit -c pyproject.toml -r picotui/

[testenv:changes]
skip_install = true

passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE

setenv =
    VERSION = {env:VERSION}

allowlist_externals = bash

deps =
    {[base]deps}
    gitchangelog @ https://github.com/sarnold/gitchangelog/releases/download/3.2.0/gitchangelog-3.2.0-py3-none-any.whl

commands =
    bash -c 'gitchangelog {posargs} > CHANGELOG.rst'

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

deps =
    pip>=21.1

commands =
    bash -c 'rm -rf *.egg_info .coverage* coverage.xml .pytest_cache __pycache__ dist/ build/'
